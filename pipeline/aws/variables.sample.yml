#
# Terraform
#

# Amazon access to use to run terraform. Usually admin account to be able to create Amazon services.

#. aws_access_key (required): ((aws_aws.access_key))
#+ Amazon AWS access key for Terraform. See value format [here](https://docs.cycloid.io/advanced-guide/integrate-and-use-cycloid-credentials-manager.html#vault-in-the-pipeline)
aws_access_key: ((aws_aws.access_key))

#. aws_secret_key (required): ((aws_aws.secret_key))
#+ Amazon AWS secret key for Terraform. See value format [here](https://docs.cycloid.io/advanced-guide/integrate-and-use-cycloid-credentials-manager.html#vault-in-the-pipeline)
aws_secret_key: ((aws_aws.secret_key))

#. aws_default_region (required): eu-west-1
#+ Amazon AWS region to use for Terraform.
aws_region: eu-west-1

#. terraform_storage_bucket_name (required): ($ organization_canonical $)-terraform-remote-state
#+ AWS S3 bucket name to store terraform remote state file.
terraform_storage_bucket_name: ($ organization_canonical $)-terraform-remote-state

#
# Repos
#

#. config_git_repository (required): git@github.com:olivier2t/config.git
#+ Git repository URL containing the config of the stack.
config_git_repository: git@github.com:olivier2t/config.git

#. config_git_branch (required): config
#+ Branch to use on the config Git repository.
config_git_branch: main

#. config_git_private_key (required): ((ssh_github.ssh_key))
#+ SSH key pair to fetch the config Git repository.
config_git_private_key: ((ssh_github.ssh_key))

#. config_terraform_path (required): ($ project $)/terraform/aws/($ environment $)
#+ Path of Terraform files in the config git repository
config_terraform_path: ($ project $)/terraform/aws/($ environment $)

#. stack_git_repository (required): git@github.com:olivier2t/stack-infra.git
#+ Git repository URL containing the stack.
stack_git_repository: git@github.com:olivier2t/stack-infra.git

#. stack_git_branch (required): master
#+ Branch to use on the stack Git repository.
stack_git_branch: main

#. stack_terraform_path (required): terraform/aws
#+ Path of Terraform files in the stack git repository
stack_terraform_path: terraform/aws

#
# Default variables that shouldn't be changed except if needed
#

#. env (required): ($ environment $)
#+ Name of the project's environment.
env: ($ environment $)

#. project (required): ($ project $)
#+ Name of the project.
project: ($ project $)

#. customer (required): ($ organization_canonical $)
#+ Name of the Cycloid Organization, used as customer variable name.
customer: ($ organization_canonical $)

#. terraform_version (required): '0.15.2'
#+ terraform version used to execute your code.
terraform_version: '0.15.2'

cidr: '10.0.0.0/16'
private_subnets: ['10.0.1.0/24']
public_subnets: ['10.0.0.0/24']
bastion_count: 1
bastion_allowed_networks: 0.0.0.0/0
bastion_instance_type: t3.small
keypair_name: demo2

# #. cycloid-toolkit ansible version (required): 'v2.7'
# #+ cycloid-toolkit docker image tag to use (https://hub.docker.com/r/cycloid/cycloid-toolkit/tags).
# ansible_version: 'v2.7'

# #. ansible_params (required): dict
# #+ Parameters of ansible-runner script. Can be found here: https://github.com/cycloidio/docker-cycloid-toolkit#ansible-runner
# ansible_params:
#   SSH_JUMP_URL: user1@Bastion1
#   SSH_PRIVATE_KEYS:
#     - ((ssh_bastion.ssh_key))
#   # ANSIBLE_PLAYBOOK_PATH should be "ansible-playbook/" + (git_ansible_path)
#   ANSIBLE_PLAYBOOK_PATH: ansible-playbook/
#   ANSIBLE_PLAYBOOK_NAME: playbook.yml
#   EXTRA_ANSIBLE_VARS:
#     customer: ($ organization_canonical $)
#     project: ($ project $)
#     env: ($ environment $)
# # If you are using Amazon EC2 dynamic inventory
#   #AWS_DEFAULT_REGION: eu-west-1
#   #AWS_ACCESS_KEY_ID: ((aws.access_key))
#   #AWS_SECRET_ACCESS_KEY: ((aws.secret_key))